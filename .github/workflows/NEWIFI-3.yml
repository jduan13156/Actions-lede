name: OpenWrt-NEWIFI-3

on:
  schedule:
    - cron: 0 20 * * *
  push:
    tags:
      - 'DEVICE_*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Space cleanup
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi --force `docker images --quiet --all`
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php \
          /etc/apt/sources.list.d
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        # 利用挂载在 /mnt/ 的 14G 额外空间:
        sudo mkdir -p /mnt/lede
        sudo chown -R $USER /mnt/lede
        ln -sv /mnt/lede lede

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: Clone source code
      run: |
        git clone https://github.com/coolsnowwolf/lede
        cd lede
        git rev-parse HEAD

    - name: Update feeds
      run: |
        cd lede
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Costom configure file
      run: |
        wget -q https://github.com/Mattaclp/build-lede-NEWIFI3/raw/master/.config
        [ -s ".config" ] || touch .config
        cp -v .config lede
        cd lede
        make defconfig

    - name: Make download
      run: |
        cd lede
        echo -e "$((4*$(nproc))) thread download."
        make download -j$((4*$(nproc)))
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile firmware
      run: |
        cd lede
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s || make -j1 V=s

    - name: Prepare artifact
      run: |
        find lede/bin/targets/ -type d -name "packages" | xargs rm -rf {}

    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt NEWIFI-3
        path: lede/bin/targets/
